<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuFlatButton1.Iconimage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGgAAABoCAYAAAAdHLWhAAAABGdBTUEAALGPC/xhBQAABO5JREFUeF7t
        3UuolGUcx/FjXrPLMbQyy8pwUUkZFSm2CCSJFi5sUdKmtJRwZSoIBRbRhaBFJC6MpMuqICW85KWg6yJK
        6YJSFEWFUNk9ooupx+//mf+EqOcwM8//nZlnzu8DP5BzZv7vPL9HR8857/vaJyIiIiIiIiIiIiLStIGB
        gVFkJfmAfEneILeSEf4Q6RQ2YSTZTE7mVTLFHyqdwAasSVsxuN/JUqI/Te1G6deS/0gjdpAL/KlSNcoe
        R/ZZ8034lSz1EVIlin4wVd6aF8gZPkqiUe415KA1neE9MsZHShRKHUv2WsMB9HYXjVIfr3Ub4hUfKxEo
        dA45lKqNsdNHSy7KHE8+T7XGedTHSy7KfKrWaZg/yPk+XnJQ5M3kiLUaaJGPlxwUeRbZnyqNs9HHSy7K
        fK7WaZgfyNk+XnJQ5C2p0lgLfbzkoMhzyIFUaZyXfLzksjJrnYb5jkzy8ZKDIm9Llcaa7+MlB0VOJj+l
        SuM87+MlF2UO9uPrVn1L+n285KDIO1OlceyL2xt9vOSgyAvJb9ZqoPU+XnJQ5Ajyeqo0zhfkND+E5KDI
        e1KlcQ6T63285KDI6eRPazXQkz5eclCknXT4bqo0zmdkvB9CclDkvanSOPbT1tk+XnJQ5Azyj7Ua6DEf
        LzkocjTZkyqN8wkZ64eQHBR5X6o0zr/kKh8vOSjySi800gM+XnJQ5BjyUao0zvtklB9CclDkQ6nSOH+T
        y3y85KDI60ijl4o0arWPLx+LmUQuIaf6h9qGY9pb28ckUm+8tbGIi8gWYt+fMnbC3iNktD+kcn68SPbW
        drmPL5ctgnxvKzqJnWScP7QyHGMWiX5rW+Xjy8Ui7BqaX9JyBvcOOd2fEs5mk6/sQIHsN1bZ15uyAPta
        40dbTQMq2yTmrk1HiGMXBF/s48vEAq4gzZ5P9jYJ3STm3USiz6de4uPLxAJa2Zy6sE1izgQSfT71Nh9f
        JhaQszl1IZvEjGfStDg/k3JvSMGLP49E/Y7dTlr+1x3PnUei39oW+/gysYCna+sI09Im8Zx+YuehRdrq
        48vFIqLf703Tm8Tjn03PjFP2W1sdi7A7aFTBbkbU0CbxuPnpGbFu9/FlYyGv1dZTCdukIX9SyecnErt6
        INLLPr58LOYGEnl5+vGG3CQ+92J6VJzeuwqOBd1N6t8QrcI2csIm8TG7cV60BT6+t7Awu64m+huTx3qL
        /H86Lb+eSqLPp97g43sTC1xIqny7S5tE7HzqXfaBQN+QM30pvYtFtmOTltd+Gca+uJ3rS+h9LPYOUuXf
        SdHW+UsfPli0XRBVwibZPXiG5/nULLzbN8neiuf4yx2eKGAR6dZNesJf5vBGEd24SXbnRJ1PXUcZ3bRJ
        ds/Rq/2lSR2lLCbdsEkP+0uS41FOpzdpN2nbeXlFoqBObZJd2TDTX4YMhaI6sUn3++GlERR2F2nXJtnN
        xHWpSLMorR2b9Be51A8pzaK8qjdppR9KWkWJVf3Q701yih9GclBk9CbZ5S7TfLxEoNDITVrmYyUSxS4h
        uWeI2rl1+q/JqkK5OZtk1ybp1vtVo+RWN6ns86lLQtnNbtImf6q0C6XbfyTbyCZ9Tc71p0k7UfwCMthF
        yeZTohtLdBIbYBcGryAfEjtJ0v5U2U30VpPKLkiWFrAhdlsx3d1QRERERERERERERKTL9PUdBXMShW30
        gvkxAAAAAElFTkSuQmCC
</value>
  </data>
</root>